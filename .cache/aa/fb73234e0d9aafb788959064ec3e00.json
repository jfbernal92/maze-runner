{"id":"../node_modules/phaser/src/utils/array/SafeRange.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543959684386},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\.babelrc","includedInParent":true,"mtime":1543958107109},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Tests if the start and end indexes are a safe range for the given array.\r\n * \r\n * @function Phaser.Utils.Array.SafeRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to check.\r\n * @param {integer} startIndex - The start index.\r\n * @param {integer} endIndex - The end index.\r\n * @param {boolean} [throwError=true] - Throw an error if the range is out of bounds.\r\n *\r\n * @return {boolean} True if the range is safe, otherwise false.\r\n */\r\nvar SafeRange = function (array, startIndex, endIndex, throwError)\r\n{\r\n    var len = array.length;\r\n\r\n    if (startIndex < 0 ||\r\n        startIndex > len ||\r\n        startIndex >= endIndex ||\r\n        endIndex > len ||\r\n        startIndex + endIndex > len)\r\n    {\r\n        if (throwError)\r\n        {\r\n            throw new Error('Range Error: Values outside acceptable range');\r\n        }\r\n\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        return true;\r\n    }\r\n};\r\n\r\nmodule.exports = SafeRange;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SafeRange.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../node_modules/phaser/src/utils/array/SafeRange.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Tests if the start and end indexes are a safe range for the given array.\r\n * \r\n * @function Phaser.Utils.Array.SafeRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to check.\r\n * @param {integer} startIndex - The start index.\r\n * @param {integer} endIndex - The end index.\r\n * @param {boolean} [throwError=true] - Throw an error if the range is out of bounds.\r\n *\r\n * @return {boolean} True if the range is safe, otherwise false.\r\n */\r\nvar SafeRange = function (array, startIndex, endIndex, throwError)\r\n{\r\n    var len = array.length;\r\n\r\n    if (startIndex < 0 ||\r\n        startIndex > len ||\r\n        startIndex >= endIndex ||\r\n        endIndex > len ||\r\n        startIndex + endIndex > len)\r\n    {\r\n        if (throwError)\r\n        {\r\n            throw new Error('Range Error: Values outside acceptable range');\r\n        }\r\n\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        return true;\r\n    }\r\n};\r\n\r\nmodule.exports = SafeRange;\r\n"},"lineCount":44}},"hash":"4f8092020d0d4fe8b7ba66104052e396","cacheData":{"env":{}}}