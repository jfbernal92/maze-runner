{"id":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543959684386},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\.babelrc","includedInParent":true,"mtime":1543958107109},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../FileTypesManager","loc":{"line":8,"column":31},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\FileTypesManager.js"},{"name":"../../utils/object/GetFastValue","loc":{"line":9,"column":27},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\object\\GetFastValue.js"},{"name":"./ImageFile.js","loc":{"line":10,"column":24},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\ImageFile.js"},{"name":"../../utils/object/IsPlainObject","loc":{"line":11,"column":28},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\object\\IsPlainObject.js"},{"name":"./JSONFile.js","loc":{"line":12,"column":23},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\JSONFile.js"},{"name":"../MultiFile.js","loc":{"line":13,"column":24},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\filetypes\\AtlasJSONFile.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\loader\\MultiFile.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar ImageFile = require('./ImageFile.js');\r\nvar IsPlainObject = require('../../utils/object/IsPlainObject');\r\nvar JSONFile = require('./JSONFile.js');\r\nvar MultiFile = require('../MultiFile.js');\r\n\r\n/**\r\n * @typedef {object} Phaser.Loader.FileTypes.AtlasJSONFileConfig\r\n *\r\n * @property {string} key - The key of the file. Must be unique within both the Loader and the Texture Manager.\r\n * @property {string} [textureURL] - The absolute or relative URL to load the texture image file from.\r\n * @property {string} [textureExtension='png'] - The default file extension to use for the image texture if no url is provided.\r\n * @property {XHRSettingsObject} [textureXhrSettings] - Extra XHR Settings specifically for the texture image file.\r\n * @property {string} [normalMap] - The filename of an associated normal map. It uses the same path and url to load as the texture image.\r\n * @property {string} [atlasURL] - The absolute or relative URL to load the atlas json file from. Or a well formed JSON object to use instead.\r\n * @property {string} [atlasExtension='json'] - The default file extension to use for the atlas json if no url is provided.\r\n * @property {XHRSettingsObject} [atlasXhrSettings] - Extra XHR Settings specifically for the atlas json file.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A single JSON based Texture Atlas File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#atlas method and are not typically created directly.\r\n * \r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#atlas.\r\n * \r\n * https://www.codeandweb.com/texturepacker/tutorials/how-to-create-sprite-sheets-for-phaser3?source=photonstorm\r\n *\r\n * @class AtlasJSONFile\r\n * @extends Phaser.Loader.MultiFile\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Loader.FileTypes.AtlasJSONFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string|string[]} [textureURL] - The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".\r\n * @param {string} [atlasURL] - The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {XHRSettingsObject} [textureXhrSettings] - An XHR Settings configuration object for the atlas image file. Used in replacement of the Loaders default XHR Settings.\r\n * @param {XHRSettingsObject} [atlasXhrSettings] - An XHR Settings configuration object for the atlas json file. Used in replacement of the Loaders default XHR Settings.\r\n */\r\nvar AtlasJSONFile = new Class({\r\n\r\n    Extends: MultiFile,\r\n\r\n    initialize:\r\n\r\n    function AtlasJSONFile (loader, key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings)\r\n    {\r\n        var image;\r\n        var data;\r\n\r\n        if (IsPlainObject(key))\r\n        {\r\n            var config = key;\r\n\r\n            key = GetFastValue(config, 'key');\r\n\r\n            image = new ImageFile(loader, {\r\n                key: key,\r\n                url: GetFastValue(config, 'textureURL'),\r\n                extension: GetFastValue(config, 'textureExtension', 'png'),\r\n                normalMap: GetFastValue(config, 'normalMap'),\r\n                xhrSettings: GetFastValue(config, 'textureXhrSettings')\r\n            });\r\n\r\n            data = new JSONFile(loader, {\r\n                key: key,\r\n                url: GetFastValue(config, 'atlasURL'),\r\n                extension: GetFastValue(config, 'atlasExtension', 'json'),\r\n                xhrSettings: GetFastValue(config, 'atlasXhrSettings')\r\n            });\r\n        }\r\n        else\r\n        {\r\n            image = new ImageFile(loader, key, textureURL, textureXhrSettings);\r\n            data = new JSONFile(loader, key, atlasURL, atlasXhrSettings);\r\n        }\r\n\r\n        if (image.linkFile)\r\n        {\r\n            //  Image has a normal map\r\n            MultiFile.call(this, loader, 'atlasjson', key, [ image, data, image.linkFile ]);\r\n        }\r\n        else\r\n        {\r\n            MultiFile.call(this, loader, 'atlasjson', key, [ image, data ]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds this file to its target cache upon successful loading and processing.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AtlasJSONFile#addToCache\r\n     * @since 3.7.0\r\n     */\r\n    addToCache: function ()\r\n    {\r\n        if (this.isReadyToProcess())\r\n        {\r\n            var image = this.files[0];\r\n            var json = this.files[1];\r\n            var normalMap = (this.files[2]) ? this.files[2].data : null;\r\n\r\n            this.loader.textureManager.addAtlas(image.key, image.data, json.data, normalMap);\r\n\r\n            json.addToCache();\r\n\r\n            this.complete = true;\r\n        }\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a JSON based Texture Atlas, or array of atlases, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n * \r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.atlas('mainmenu', 'images/MainMenu.png', 'images/MainMenu.json');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n * \r\n * If you call this from outside of `preload` then you are responsible for starting the Loader afterwards and monitoring\r\n * its events to know when it's safe to use the asset. Please see the Phaser.Loader.LoaderPlugin class for more details.\r\n *\r\n * Phaser expects the atlas data to be provided in a JSON file, using either the JSON Hash or JSON Array format.\r\n * These files are created by software such as Texture Packer, Shoebox and Adobe Flash / Animate.\r\n * If you are using Texture Packer and have enabled multi-atlas support, then please use the Phaser Multi Atlas loader\r\n * instead of this one.\r\n * \r\n * Phaser can load all common image types: png, jpg, gif and any other format the browser can natively handle.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global Texture Manager upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the Texture Manager.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the Texture Manager first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n * \r\n * ```javascript\r\n * this.load.atlas({\r\n *     key: 'mainmenu',\r\n *     textureURL: 'images/MainMenu.png',\r\n *     atlasURL: 'images/MainMenu.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Loader.FileTypes.AtlasJSONFileConfig` for more details.\r\n *\r\n * Instead of passing a URL for the atlas JSON data you can also pass in a well formed JSON object instead.\r\n *\r\n * Once the atlas has finished loading you can use frames from it as textures for a Game Object by referencing its key:\r\n * \r\n * ```javascript\r\n * this.load.atlas('mainmenu', 'images/MainMenu.png', 'images/MainMenu.json');\r\n * // and later in your game ...\r\n * this.add.image(x, y, 'mainmenu', 'background');\r\n * ```\r\n *\r\n * To get a list of all available frames within an atlas please consult your Texture Atlas software.\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `MENU.` and the key was `Background` the final key will be `MENU.Background` and\r\n * this is what you would use to retrieve the image from the Texture Manager.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\r\n * and no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * Phaser also supports the automatic loading of associated normal maps. If you have a normal map to go with this image,\r\n * then you can specify it by providing an array as the `url` where the second element is the normal map:\r\n * \r\n * ```javascript\r\n * this.load.atlas('mainmenu', [ 'images/MainMenu.png', 'images/MainMenu-n.png' ], 'images/MainMenu.json');\r\n * ```\r\n *\r\n * Or, if you are using a config object use the `normalMap` property:\r\n * \r\n * ```javascript\r\n * this.load.atlas({\r\n *     key: 'mainmenu',\r\n *     textureURL: 'images/MainMenu.png',\r\n *     normalMap: 'images/MainMenu-n.png',\r\n *     atlasURL: 'images/MainMenu.json'\r\n * });\r\n * ```\r\n *\r\n * The normal map file is subject to the same conditions as the image file with regard to the path, baseURL, CORs and XHR Settings.\r\n * Normal maps are a WebGL only feature.\r\n *\r\n * Note: The ability to load this type of file will only be available if the Atlas JSON File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#atlas\r\n * @fires Phaser.Loader.LoaderPlugin#addFileEvent\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Loader.FileTypes.AtlasJSONFileConfig|Phaser.Loader.FileTypes.AtlasJSONFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string|string[]} [textureURL] - The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".\r\n * @param {string} [atlasURL] - The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {XHRSettingsObject} [textureXhrSettings] - An XHR Settings configuration object for the atlas image file. Used in replacement of the Loaders default XHR Settings.\r\n * @param {XHRSettingsObject} [atlasXhrSettings] - An XHR Settings configuration object for the atlas json file. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {Phaser.Loader.LoaderPlugin} The Loader instance.\r\n */\r\nFileTypesManager.register('atlas', function (key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings)\r\n{\r\n    var multifile;\r\n\r\n    //  Supports an Object file definition in the key argument\r\n    //  Or an array of objects in the key argument\r\n    //  Or a single entry where all arguments have been defined\r\n\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            multifile = new AtlasJSONFile(this, key[i]);\r\n\r\n            this.addFile(multifile.files);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        multifile = new AtlasJSONFile(this, key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings);\r\n\r\n        this.addFile(multifile.files);\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = AtlasJSONFile;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}}],"sources":{"../node_modules/phaser/src/loader/filetypes/AtlasJSONFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar ImageFile = require('./ImageFile.js');\r\nvar IsPlainObject = require('../../utils/object/IsPlainObject');\r\nvar JSONFile = require('./JSONFile.js');\r\nvar MultiFile = require('../MultiFile.js');\r\n\r\n/**\r\n * @typedef {object} Phaser.Loader.FileTypes.AtlasJSONFileConfig\r\n *\r\n * @property {string} key - The key of the file. Must be unique within both the Loader and the Texture Manager.\r\n * @property {string} [textureURL] - The absolute or relative URL to load the texture image file from.\r\n * @property {string} [textureExtension='png'] - The default file extension to use for the image texture if no url is provided.\r\n * @property {XHRSettingsObject} [textureXhrSettings] - Extra XHR Settings specifically for the texture image file.\r\n * @property {string} [normalMap] - The filename of an associated normal map. It uses the same path and url to load as the texture image.\r\n * @property {string} [atlasURL] - The absolute or relative URL to load the atlas json file from. Or a well formed JSON object to use instead.\r\n * @property {string} [atlasExtension='json'] - The default file extension to use for the atlas json if no url is provided.\r\n * @property {XHRSettingsObject} [atlasXhrSettings] - Extra XHR Settings specifically for the atlas json file.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A single JSON based Texture Atlas File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#atlas method and are not typically created directly.\r\n * \r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#atlas.\r\n * \r\n * https://www.codeandweb.com/texturepacker/tutorials/how-to-create-sprite-sheets-for-phaser3?source=photonstorm\r\n *\r\n * @class AtlasJSONFile\r\n * @extends Phaser.Loader.MultiFile\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Loader.FileTypes.AtlasJSONFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string|string[]} [textureURL] - The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".\r\n * @param {string} [atlasURL] - The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {XHRSettingsObject} [textureXhrSettings] - An XHR Settings configuration object for the atlas image file. Used in replacement of the Loaders default XHR Settings.\r\n * @param {XHRSettingsObject} [atlasXhrSettings] - An XHR Settings configuration object for the atlas json file. Used in replacement of the Loaders default XHR Settings.\r\n */\r\nvar AtlasJSONFile = new Class({\r\n\r\n    Extends: MultiFile,\r\n\r\n    initialize:\r\n\r\n    function AtlasJSONFile (loader, key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings)\r\n    {\r\n        var image;\r\n        var data;\r\n\r\n        if (IsPlainObject(key))\r\n        {\r\n            var config = key;\r\n\r\n            key = GetFastValue(config, 'key');\r\n\r\n            image = new ImageFile(loader, {\r\n                key: key,\r\n                url: GetFastValue(config, 'textureURL'),\r\n                extension: GetFastValue(config, 'textureExtension', 'png'),\r\n                normalMap: GetFastValue(config, 'normalMap'),\r\n                xhrSettings: GetFastValue(config, 'textureXhrSettings')\r\n            });\r\n\r\n            data = new JSONFile(loader, {\r\n                key: key,\r\n                url: GetFastValue(config, 'atlasURL'),\r\n                extension: GetFastValue(config, 'atlasExtension', 'json'),\r\n                xhrSettings: GetFastValue(config, 'atlasXhrSettings')\r\n            });\r\n        }\r\n        else\r\n        {\r\n            image = new ImageFile(loader, key, textureURL, textureXhrSettings);\r\n            data = new JSONFile(loader, key, atlasURL, atlasXhrSettings);\r\n        }\r\n\r\n        if (image.linkFile)\r\n        {\r\n            //  Image has a normal map\r\n            MultiFile.call(this, loader, 'atlasjson', key, [ image, data, image.linkFile ]);\r\n        }\r\n        else\r\n        {\r\n            MultiFile.call(this, loader, 'atlasjson', key, [ image, data ]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds this file to its target cache upon successful loading and processing.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AtlasJSONFile#addToCache\r\n     * @since 3.7.0\r\n     */\r\n    addToCache: function ()\r\n    {\r\n        if (this.isReadyToProcess())\r\n        {\r\n            var image = this.files[0];\r\n            var json = this.files[1];\r\n            var normalMap = (this.files[2]) ? this.files[2].data : null;\r\n\r\n            this.loader.textureManager.addAtlas(image.key, image.data, json.data, normalMap);\r\n\r\n            json.addToCache();\r\n\r\n            this.complete = true;\r\n        }\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a JSON based Texture Atlas, or array of atlases, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n * \r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.atlas('mainmenu', 'images/MainMenu.png', 'images/MainMenu.json');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n * \r\n * If you call this from outside of `preload` then you are responsible for starting the Loader afterwards and monitoring\r\n * its events to know when it's safe to use the asset. Please see the Phaser.Loader.LoaderPlugin class for more details.\r\n *\r\n * Phaser expects the atlas data to be provided in a JSON file, using either the JSON Hash or JSON Array format.\r\n * These files are created by software such as Texture Packer, Shoebox and Adobe Flash / Animate.\r\n * If you are using Texture Packer and have enabled multi-atlas support, then please use the Phaser Multi Atlas loader\r\n * instead of this one.\r\n * \r\n * Phaser can load all common image types: png, jpg, gif and any other format the browser can natively handle.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global Texture Manager upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the Texture Manager.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the Texture Manager first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n * \r\n * ```javascript\r\n * this.load.atlas({\r\n *     key: 'mainmenu',\r\n *     textureURL: 'images/MainMenu.png',\r\n *     atlasURL: 'images/MainMenu.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Loader.FileTypes.AtlasJSONFileConfig` for more details.\r\n *\r\n * Instead of passing a URL for the atlas JSON data you can also pass in a well formed JSON object instead.\r\n *\r\n * Once the atlas has finished loading you can use frames from it as textures for a Game Object by referencing its key:\r\n * \r\n * ```javascript\r\n * this.load.atlas('mainmenu', 'images/MainMenu.png', 'images/MainMenu.json');\r\n * // and later in your game ...\r\n * this.add.image(x, y, 'mainmenu', 'background');\r\n * ```\r\n *\r\n * To get a list of all available frames within an atlas please consult your Texture Atlas software.\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `MENU.` and the key was `Background` the final key will be `MENU.Background` and\r\n * this is what you would use to retrieve the image from the Texture Manager.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"alien\"\r\n * and no URL is given then the Loader will set the URL to be \"alien.png\". It will always add `.png` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * Phaser also supports the automatic loading of associated normal maps. If you have a normal map to go with this image,\r\n * then you can specify it by providing an array as the `url` where the second element is the normal map:\r\n * \r\n * ```javascript\r\n * this.load.atlas('mainmenu', [ 'images/MainMenu.png', 'images/MainMenu-n.png' ], 'images/MainMenu.json');\r\n * ```\r\n *\r\n * Or, if you are using a config object use the `normalMap` property:\r\n * \r\n * ```javascript\r\n * this.load.atlas({\r\n *     key: 'mainmenu',\r\n *     textureURL: 'images/MainMenu.png',\r\n *     normalMap: 'images/MainMenu-n.png',\r\n *     atlasURL: 'images/MainMenu.json'\r\n * });\r\n * ```\r\n *\r\n * The normal map file is subject to the same conditions as the image file with regard to the path, baseURL, CORs and XHR Settings.\r\n * Normal maps are a WebGL only feature.\r\n *\r\n * Note: The ability to load this type of file will only be available if the Atlas JSON File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#atlas\r\n * @fires Phaser.Loader.LoaderPlugin#addFileEvent\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Loader.FileTypes.AtlasJSONFileConfig|Phaser.Loader.FileTypes.AtlasJSONFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string|string[]} [textureURL] - The absolute or relative URL to load the texture image file from. If undefined or `null` it will be set to `<key>.png`, i.e. if `key` was \"alien\" then the URL will be \"alien.png\".\r\n * @param {string} [atlasURL] - The absolute or relative URL to load the texture atlas json data file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {XHRSettingsObject} [textureXhrSettings] - An XHR Settings configuration object for the atlas image file. Used in replacement of the Loaders default XHR Settings.\r\n * @param {XHRSettingsObject} [atlasXhrSettings] - An XHR Settings configuration object for the atlas json file. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {Phaser.Loader.LoaderPlugin} The Loader instance.\r\n */\r\nFileTypesManager.register('atlas', function (key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings)\r\n{\r\n    var multifile;\r\n\r\n    //  Supports an Object file definition in the key argument\r\n    //  Or an array of objects in the key argument\r\n    //  Or a single entry where all arguments have been defined\r\n\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            multifile = new AtlasJSONFile(this, key[i]);\r\n\r\n            this.addFile(multifile.files);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        multifile = new AtlasJSONFile(this, key, textureURL, atlasURL, textureXhrSettings, atlasXhrSettings);\r\n\r\n        this.addFile(multifile.files);\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = AtlasJSONFile;\r\n"},"lineCount":257}},"hash":"315695156d9f465b3cabcaa6dc402ac0","cacheData":{"env":{}}}