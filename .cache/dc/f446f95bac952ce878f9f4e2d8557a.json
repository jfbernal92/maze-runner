{"id":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543957193313},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a snapshot of the current frame displayed by a WebGL canvas.\r\n *\r\n * @function Phaser.Renderer.Snapshot.WebGL\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} sourceCanvas - The canvas to take a snapshot of.\r\n * @param {string} [type='image/png'] - The format of the returned image.\r\n * @param {number} [encoderOptions=0.92] - The image quality, between 0 and 1, for image formats which use lossy compression (such as `image/jpeg`).\r\n *\r\n * @return {HTMLImageElement} A new image which contains a snapshot of the canvas's contents.\r\n */\r\nvar WebGLSnapshot = function (sourceCanvas, type, encoderOptions)\r\n{\r\n    if (!type) { type = 'image/png'; }\r\n    if (!encoderOptions) { encoderOptions = 0.92; }\r\n\r\n    var gl = sourceCanvas.getContext('experimental-webgl');\r\n    var pixels = new Uint8Array(gl.drawingBufferWidth * gl.drawingBufferHeight * 4);\r\n    gl.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n\r\n    //  CanvasPool?\r\n    var canvas = document.createElement('canvas');\r\n    var ctx = canvas.getContext('2d');\r\n    var imageData;\r\n\r\n    canvas.width = gl.drawingBufferWidth;\r\n    canvas.height = gl.drawingBufferHeight;\r\n\r\n    imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n    var data = imageData.data;\r\n\r\n    for (var y = 0; y < canvas.height; y += 1)\r\n    {\r\n        for (var x = 0; x < canvas.width; x += 1)\r\n        {\r\n            var si = ((canvas.height - y) * canvas.width + x) * 4;\r\n            var di = (y * canvas.width + x) * 4;\r\n            data[di + 0] = pixels[si + 0];\r\n            data[di + 1] = pixels[si + 1];\r\n            data[di + 2] = pixels[si + 2];\r\n            data[di + 3] = pixels[si + 3];\r\n        }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n\r\n    var src = canvas.toDataURL(type, encoderOptions);\r\n    var image = new Image();\r\n\r\n    image.src = src;\r\n\r\n    return image;\r\n};\r\n\r\nmodule.exports = WebGLSnapshot;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a snapshot of the current frame displayed by a WebGL canvas.\r\n *\r\n * @function Phaser.Renderer.Snapshot.WebGL\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} sourceCanvas - The canvas to take a snapshot of.\r\n * @param {string} [type='image/png'] - The format of the returned image.\r\n * @param {number} [encoderOptions=0.92] - The image quality, between 0 and 1, for image formats which use lossy compression (such as `image/jpeg`).\r\n *\r\n * @return {HTMLImageElement} A new image which contains a snapshot of the canvas's contents.\r\n */\r\nvar WebGLSnapshot = function (sourceCanvas, type, encoderOptions)\r\n{\r\n    if (!type) { type = 'image/png'; }\r\n    if (!encoderOptions) { encoderOptions = 0.92; }\r\n\r\n    var gl = sourceCanvas.getContext('experimental-webgl');\r\n    var pixels = new Uint8Array(gl.drawingBufferWidth * gl.drawingBufferHeight * 4);\r\n    gl.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n\r\n    //  CanvasPool?\r\n    var canvas = document.createElement('canvas');\r\n    var ctx = canvas.getContext('2d');\r\n    var imageData;\r\n\r\n    canvas.width = gl.drawingBufferWidth;\r\n    canvas.height = gl.drawingBufferHeight;\r\n\r\n    imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n    var data = imageData.data;\r\n\r\n    for (var y = 0; y < canvas.height; y += 1)\r\n    {\r\n        for (var x = 0; x < canvas.width; x += 1)\r\n        {\r\n            var si = ((canvas.height - y) * canvas.width + x) * 4;\r\n            var di = (y * canvas.width + x) * 4;\r\n            data[di + 0] = pixels[si + 0];\r\n            data[di + 1] = pixels[si + 1];\r\n            data[di + 2] = pixels[si + 2];\r\n            data[di + 3] = pixels[si + 3];\r\n        }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n\r\n    var src = canvas.toDataURL(type, encoderOptions);\r\n    var image = new Image();\r\n\r\n    image.src = src;\r\n\r\n    return image;\r\n};\r\n\r\nmodule.exports = WebGLSnapshot;\r\n"},"lineCount":64}},"hash":"398afe08b2b8161693f1b4bb07b6eb00","cacheData":{"env":{}}}