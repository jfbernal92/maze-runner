{"id":"../node_modules/phaser/src/structs/List.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543957193313},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973},{"name":"../utils/array","loc":{"line":7,"column":25},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\structs\\List.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\array\\index.js"},{"name":"../utils/Class","loc":{"line":8,"column":20},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\structs\\List.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../utils/NOOP","loc":{"line":9,"column":19},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\structs\\List.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\NOOP.js"},{"name":"../utils/array/StableSort","loc":{"line":10,"column":25},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\structs\\List.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\array\\StableSort.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar ArrayUtils = require('../utils/array');\r\nvar Class = require('../utils/Class');\r\nvar NOOP = require('../utils/NOOP');\r\nvar StableSort = require('../utils/array/StableSort');\r\n\r\n/**\r\n * @callback EachListCallback\r\n * @generic I - [item]\r\n *\r\n * @param {*} item - The item which is currently being processed.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * List is a generic implementation of an ordered list which contains utility methods for retrieving, manipulating, and iterating items.\r\n *\r\n * @class List\r\n * @memberof Phaser.Structs\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @generic T\r\n *\r\n * @param {*} parent - The parent of this list.\r\n */\r\nvar List = new Class({\r\n\r\n    initialize:\r\n\r\n    function List (parent)\r\n    {\r\n        /**\r\n         * The parent of this list.\r\n         *\r\n         * @name Phaser.Structs.List#parent\r\n         * @type {*}\r\n         * @since 3.0.0\r\n         */\r\n        this.parent = parent;\r\n\r\n        /**\r\n         * The objects that belong to this collection.\r\n         *\r\n         * @genericUse {T[]} - [$type]\r\n         *\r\n         * @name Phaser.Structs.List#list\r\n         * @type {Array.<*>}\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this.list = [];\r\n\r\n        /**\r\n         * The index of the current element.\r\n         * \r\n         * This is used internally when iterating through the list with the {@link #first}, {@link #last}, {@link #get}, and {@link #previous} properties.\r\n         *\r\n         * @name Phaser.Structs.List#position\r\n         * @type {integer}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.position = 0;\r\n\r\n        /**\r\n         * A callback that is invoked every time a child is added to this list.\r\n         *\r\n         * @name Phaser.Structs.List#addCallback\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.addCallback = NOOP;\r\n\r\n        /**\r\n         * A callback that is invoked every time a child is removed from this list.\r\n         *\r\n         * @name Phaser.Structs.List#removeCallback\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.removeCallback = NOOP;\r\n\r\n        /**\r\n         * The property key to sort by.\r\n         *\r\n         * @name Phaser.Structs.List#_sortKey\r\n         * @type {string}\r\n         * @since 3.4.0\r\n         */\r\n        this._sortKey = '';\r\n    },\r\n\r\n    /**\r\n     * Adds the given item to the end of the list. Each item must be unique.\r\n     *\r\n     * @method Phaser.Structs.List#add\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*|Array.<*>} child - The item, or array of items, to add to the list.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.addCallback if this child is added successfully.\r\n     *\r\n     * @return {*} The list's underlying array.\r\n     */\r\n    add: function (child, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.Add(this.list, child);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.Add(this.list, child, 0, this.addCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds an item to list, starting at a specified index. Each item must be unique within the list.\r\n     *\r\n     * @method Phaser.Structs.List#addAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item, or array of items, to add to the list.\r\n     * @param {integer} [index=0] - The index in the list at which the element(s) will be inserted.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.addCallback if this child is added successfully.\r\n     *\r\n     * @return {*} The List's underlying array.\r\n     */\r\n    addAt: function (child, index, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.AddAt(this.list, child, index);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.AddAt(this.list, child, index, 0, this.addCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the item at a given position inside the List.\r\n     *\r\n     * @method Phaser.Structs.List#getAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [$return]\r\n     *\r\n     * @param {integer} index - The index of the item.\r\n     *\r\n     * @return {*} The retrieved item, or `undefined` if it's outside the List's bounds.\r\n     */\r\n    getAt: function (index)\r\n    {\r\n        return this.list[index];\r\n    },\r\n\r\n    /**\r\n     * Locates an item within the List and returns its index.\r\n     *\r\n     * @method Phaser.Structs.List#getIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child]\r\n     *\r\n     * @param {*} child - The item to locate.\r\n     *\r\n     * @return {integer} The index of the item within the List, or -1 if it's not in the List.\r\n     */\r\n    getIndex: function (child)\r\n    {\r\n        //  Return -1 if given child isn't a child of this display list\r\n        return this.list.indexOf(child);\r\n    },\r\n\r\n    /**\r\n     * Sort the contents of this List so the items are in order based\r\n     * on the given property. For example, `sort('alpha')` would sort the List\r\n     * contents based on the value of their `alpha` property.\r\n     *\r\n     * @method Phaser.Structs.List#sort\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [children,$return]\r\n     *\r\n     * @param {string} property - The property to lexically sort by.\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    sort: function (property)\r\n    {\r\n        if (property)\r\n        {\r\n            this._sortKey = property;\r\n\r\n            StableSort.inplace(this.list, this.sortHandler);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal handler for the {@link #sort} method which compares two items.\r\n     *\r\n     * @method Phaser.Structs.List#sortHandler\r\n     * @private\r\n     * @since 3.4.0\r\n     *\r\n     * @genericUse {T} - [childA,childB]\r\n     *\r\n     * @param {*} childA - The first item to compare.\r\n     * @param {*} childB - The second item to compare.\r\n     *\r\n     * @return {integer} The result of the comparison, which will be negative if the first item is smaller then second, positive if the first item is larger than the second, or 0 if they're equal.\r\n     */\r\n    sortHandler: function (childA, childB)\r\n    {\r\n        return childA[this._sortKey] - childB[this._sortKey];\r\n    },\r\n\r\n    /**\r\n     * Searches for the first instance of a child with its `name`\r\n     * property matching the given argument. Should more than one child have\r\n     * the same name only the first is returned.\r\n     *\r\n     * @method Phaser.Structs.List#getByName\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {string} name - The name to search for.\r\n     *\r\n     * @return {?*} The first child with a matching name, or null if none were found.\r\n     */\r\n    getByName: function (name)\r\n    {\r\n        return ArrayUtils.GetFirst(this.list, 'name', name);\r\n    },\r\n\r\n    /**\r\n     * Returns a random child from the group.\r\n     *\r\n     * @method Phaser.Structs.List#getRandom\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {integer} [startIndex=0] - Offset from the front of the group (lowest child).\r\n     * @param {integer} [length=(to top)] - Restriction on the number of values you want to randomly select from.\r\n     *\r\n     * @return {?*} A random child of this Group.\r\n     */\r\n    getRandom: function (startIndex, length)\r\n    {\r\n        return ArrayUtils.GetRandom(this.list, startIndex, length);\r\n    },\r\n\r\n    /**\r\n     * Returns the first element in a given part of the List which matches a specific criterion.\r\n     *\r\n     * @method Phaser.Structs.List#getFirst\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {string} property - The name of the property to test or a falsey value to have no criterion.\r\n     * @param {*} value - The value to test the `property` against, or `undefined` to allow any value and only check for existence.\r\n     * @param {number} [startIndex=0] - The position in the List to start the search at.\r\n     * @param {number} [endIndex] - The position in the List to optionally stop the search at. It won't be checked.\r\n     *\r\n     * @return {?*} The first item which matches the given criterion, or `null` if no such item exists.\r\n     */\r\n    getFirst: function (property, value, startIndex, endIndex)\r\n    {\r\n        return ArrayUtils.GetFirstElement(this.list, property, value, startIndex, endIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns all children in this List.\r\n     *\r\n     * You can optionally specify a matching criteria using the `property` and `value` arguments.\r\n     *\r\n     * For example: `getAll('parent')` would return only children that have a property called `parent`.\r\n     *\r\n     * You can also specify a value to compare the property to:\r\n     * \r\n     * `getAll('visible', true)` would return only children that have their visible property set to `true`.\r\n     *\r\n     * Optionally you can specify a start and end index. For example if this List had 100 children,\r\n     * and you set `startIndex` to 0 and `endIndex` to 50, it would return matches from only\r\n     * the first 50 children in the List.\r\n     *\r\n     * @method Phaser.Structs.List#getAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @param {string} [property] - An optional property to test against the value argument.\r\n     * @param {*} [value] - If property is set then Child.property must strictly equal this value to be included in the results.\r\n     * @param {integer} [startIndex] - The first child index to start the search from.\r\n     * @param {integer} [endIndex] - The last child index to search up until.\r\n     *\r\n     * @return {Array.<*>} All items of the List which match the given criterion, if any.\r\n     */\r\n    getAll: function (property, value, startIndex, endIndex)\r\n    {\r\n        return ArrayUtils.GetAll(this.list, property, value, startIndex, endIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns the total number of items in the List which have a property matching the given value.\r\n     *\r\n     * @method Phaser.Structs.List#count\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     *\r\n     * @param {string} property - The property to test on each item.\r\n     * @param {*} value - The value to test the property against.\r\n     *\r\n     * @return {integer} The total number of matching elements.\r\n     */\r\n    count: function (property, value)\r\n    {\r\n        return ArrayUtils.CountAllMatching(this.list, property, value);\r\n    },\r\n\r\n    /**\r\n     * Swaps the positions of two items in the list.\r\n     *\r\n     * @method Phaser.Structs.List#swap\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child1,child2]\r\n     *\r\n     * @param {*} child1 - The first item to swap.\r\n     * @param {*} child2 - The second item to swap.\r\n     */\r\n    swap: function (child1, child2)\r\n    {\r\n        ArrayUtils.Swap(this.list, child1, child2);\r\n    },\r\n\r\n    /**\r\n     * Moves an item in the List to a new position.\r\n     *\r\n     * @method Phaser.Structs.List#moveTo\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move.\r\n     * @param {integer} index - Moves an item in the List to a new position.\r\n     *\r\n     * @return {*} The item that was moved.\r\n     */\r\n    moveTo: function (child, index)\r\n    {\r\n        return ArrayUtils.MoveTo(this.list, child, index);\r\n    },\r\n\r\n    /**\r\n     * Removes one or many items from the List.\r\n     *\r\n     * @method Phaser.Structs.List#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item, or array of items, to remove.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {*} The item, or array of items, which were successfully removed from the List.\r\n     */\r\n    remove: function (child, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.Remove(this.list, child);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.Remove(this.list, child, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the item at the given position in the List.\r\n     *\r\n     * @method Phaser.Structs.List#removeAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [$return]\r\n     *\r\n     * @param {integer} index - The position to remove the item from.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {*} The item that was removed.\r\n     */\r\n    removeAt: function (index, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.RemoveAt(this.list, index);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.RemoveAt(this.list, index, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the items within the given range in the List.\r\n     *\r\n     * @method Phaser.Structs.List#removeBetween\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @param {integer} [startIndex=0] - The index to start removing from.\r\n     * @param {integer} [endIndex] - The position to stop removing at. The item at this position won't be removed.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {Array.<*>} An array of the items which were removed.[description]\r\n     */\r\n    removeBetween: function (startIndex, endIndex, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.RemoveBetween(this.list, startIndex, endIndex);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.RemoveBetween(this.list, startIndex, endIndex, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes all the items.\r\n     *\r\n     * @method Phaser.Structs.List#removeAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     * \r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    removeAll: function (skipCallback)\r\n    {\r\n        var i = this.list.length;\r\n\r\n        while (i--)\r\n        {\r\n            this.remove(this.list[i], skipCallback);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Brings the given child to the top of this List.\r\n     *\r\n     * @method Phaser.Structs.List#bringToTop\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to bring to the top of the List.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    bringToTop: function (child)\r\n    {\r\n        return ArrayUtils.BringToTop(this.list, child);\r\n    },\r\n\r\n    /**\r\n     * Sends the given child to the bottom of this List.\r\n     *\r\n     * @method Phaser.Structs.List#sendToBack\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to send to the back of the list.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    sendToBack: function (child)\r\n    {\r\n        return ArrayUtils.SendToBack(this.list, child);\r\n    },\r\n\r\n    /**\r\n     * Moves the given child up one place in this group unless it's already at the top.\r\n     *\r\n     * @method Phaser.Structs.List#moveUp\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move up.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    moveUp: function (child)\r\n    {\r\n        ArrayUtils.MoveUp(this.list, child);\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * Moves the given child down one place in this group unless it's already at the bottom.\r\n     *\r\n     * @method Phaser.Structs.List#moveDown\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move down.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    moveDown: function (child)\r\n    {\r\n        ArrayUtils.MoveDown(this.list, child);\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * Reverses the order of all children in this List.\r\n     *\r\n     * @method Phaser.Structs.List#reverse\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    reverse: function ()\r\n    {\r\n        this.list.reverse();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Shuffles the items in the list.\r\n     *\r\n     * @method Phaser.Structs.List#shuffle\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    shuffle: function ()\r\n    {\r\n        ArrayUtils.Shuffle(this.list);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Replaces a child of this List with the given newChild. The newChild cannot be a member of this List.\r\n     *\r\n     * @method Phaser.Structs.List#replace\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [oldChild,newChild,$return]\r\n     *\r\n     * @param {*} oldChild - The child in this List that will be replaced.\r\n     * @param {*} newChild - The child to be inserted into this List.\r\n     *\r\n     * @return {*} Returns the oldChild that was replaced within this group.\r\n     */\r\n    replace: function (oldChild, newChild)\r\n    {\r\n        return ArrayUtils.Replace(this.list, oldChild, newChild);\r\n    },\r\n\r\n    /**\r\n     * Checks if an item exists within the List.\r\n     *\r\n     * @method Phaser.Structs.List#exists\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child]\r\n     *\r\n     * @param {*} child - The item to check for the existence of.\r\n     *\r\n     * @return {boolean} `true` if the item is found in the list, otherwise `false`.\r\n     */\r\n    exists: function (child)\r\n    {\r\n        return (this.list.indexOf(child) > -1);\r\n    },\r\n\r\n    /**\r\n     * Sets the property `key` to the given value on all members of this List.\r\n     *\r\n     * @method Phaser.Structs.List#setAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     *\r\n     * @param {string} property - The name of the property to set.\r\n     * @param {*} value - The value to set the property to.\r\n     * @param {integer} [startIndex] - The first child index to start the search from.\r\n     * @param {integer} [endIndex] - The last child index to search up until.\r\n     */\r\n    setAll: function (property, value, startIndex, endIndex)\r\n    {\r\n        ArrayUtils.SetAll(this.list, property, value, startIndex, endIndex);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Passes all children to the given callback.\r\n     *\r\n     * @method Phaser.Structs.List#each\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {EachListCallback.<T>} - [callback]\r\n     *\r\n     * @param {EachListCallback} callback - The function to call.\r\n     * @param {*} [context] - Value to use as `this` when executing callback.\r\n     * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n     */\r\n    each: function (callback, context)\r\n    {\r\n        var args = [ null ];\r\n\r\n        for (var i = 2; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (i = 0; i < this.list.length; i++)\r\n        {\r\n            args[0] = this.list[i];\r\n\r\n            callback.apply(context, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Clears the List and recreates its internal array.\r\n     *\r\n     * @method Phaser.Structs.List#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.removeAll();\r\n\r\n        this.list = [];\r\n    },\r\n\r\n    /**\r\n     * Destroys this List.\r\n     *\r\n     * @method Phaser.Structs.List#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.removeAll();\r\n\r\n        this.parent = null;\r\n        this.addCallback = null;\r\n        this.removeCallback = null;\r\n    },\r\n\r\n    /**\r\n     * The number of items inside the List.\r\n     *\r\n     * @name Phaser.Structs.List#length\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    length: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.list.length;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The first item in the List or `null` for an empty List.\r\n     *\r\n     * @name Phaser.Structs.List#first\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    first: {\r\n\r\n        get: function ()\r\n        {\r\n            this.position = 0;\r\n\r\n            if (this.list.length > 0)\r\n            {\r\n                return this.list[0];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The last item in the List, or `null` for an empty List.\r\n     *\r\n     * @name Phaser.Structs.List#last\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    last: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.list.length > 0)\r\n            {\r\n                this.position = this.list.length - 1;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The next item in the List, or `null` if the entire List has been traversed.\r\n     * \r\n     * This property can be read successively after reading {@link #first} or manually setting the {@link #position} to iterate the List.\r\n     *\r\n     * @name Phaser.Structs.List#next\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    next: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.position < this.list.length)\r\n            {\r\n                this.position++;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The previous item in the List, or `null` if the entire List has been traversed.\r\n     * \r\n     * This property can be read successively after reading {@link #last} or manually setting the {@link #position} to iterate the List backwards.\r\n     *\r\n     * @name Phaser.Structs.List#previous\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    previous: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.position > 0)\r\n            {\r\n                this.position--;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = List;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/phaser/src/structs/List.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}}],"sources":{"../node_modules/phaser/src/structs/List.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar ArrayUtils = require('../utils/array');\r\nvar Class = require('../utils/Class');\r\nvar NOOP = require('../utils/NOOP');\r\nvar StableSort = require('../utils/array/StableSort');\r\n\r\n/**\r\n * @callback EachListCallback\r\n * @generic I - [item]\r\n *\r\n * @param {*} item - The item which is currently being processed.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * List is a generic implementation of an ordered list which contains utility methods for retrieving, manipulating, and iterating items.\r\n *\r\n * @class List\r\n * @memberof Phaser.Structs\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @generic T\r\n *\r\n * @param {*} parent - The parent of this list.\r\n */\r\nvar List = new Class({\r\n\r\n    initialize:\r\n\r\n    function List (parent)\r\n    {\r\n        /**\r\n         * The parent of this list.\r\n         *\r\n         * @name Phaser.Structs.List#parent\r\n         * @type {*}\r\n         * @since 3.0.0\r\n         */\r\n        this.parent = parent;\r\n\r\n        /**\r\n         * The objects that belong to this collection.\r\n         *\r\n         * @genericUse {T[]} - [$type]\r\n         *\r\n         * @name Phaser.Structs.List#list\r\n         * @type {Array.<*>}\r\n         * @default []\r\n         * @since 3.0.0\r\n         */\r\n        this.list = [];\r\n\r\n        /**\r\n         * The index of the current element.\r\n         * \r\n         * This is used internally when iterating through the list with the {@link #first}, {@link #last}, {@link #get}, and {@link #previous} properties.\r\n         *\r\n         * @name Phaser.Structs.List#position\r\n         * @type {integer}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.position = 0;\r\n\r\n        /**\r\n         * A callback that is invoked every time a child is added to this list.\r\n         *\r\n         * @name Phaser.Structs.List#addCallback\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.addCallback = NOOP;\r\n\r\n        /**\r\n         * A callback that is invoked every time a child is removed from this list.\r\n         *\r\n         * @name Phaser.Structs.List#removeCallback\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.removeCallback = NOOP;\r\n\r\n        /**\r\n         * The property key to sort by.\r\n         *\r\n         * @name Phaser.Structs.List#_sortKey\r\n         * @type {string}\r\n         * @since 3.4.0\r\n         */\r\n        this._sortKey = '';\r\n    },\r\n\r\n    /**\r\n     * Adds the given item to the end of the list. Each item must be unique.\r\n     *\r\n     * @method Phaser.Structs.List#add\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*|Array.<*>} child - The item, or array of items, to add to the list.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.addCallback if this child is added successfully.\r\n     *\r\n     * @return {*} The list's underlying array.\r\n     */\r\n    add: function (child, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.Add(this.list, child);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.Add(this.list, child, 0, this.addCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds an item to list, starting at a specified index. Each item must be unique within the list.\r\n     *\r\n     * @method Phaser.Structs.List#addAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item, or array of items, to add to the list.\r\n     * @param {integer} [index=0] - The index in the list at which the element(s) will be inserted.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.addCallback if this child is added successfully.\r\n     *\r\n     * @return {*} The List's underlying array.\r\n     */\r\n    addAt: function (child, index, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.AddAt(this.list, child, index);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.AddAt(this.list, child, index, 0, this.addCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the item at a given position inside the List.\r\n     *\r\n     * @method Phaser.Structs.List#getAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [$return]\r\n     *\r\n     * @param {integer} index - The index of the item.\r\n     *\r\n     * @return {*} The retrieved item, or `undefined` if it's outside the List's bounds.\r\n     */\r\n    getAt: function (index)\r\n    {\r\n        return this.list[index];\r\n    },\r\n\r\n    /**\r\n     * Locates an item within the List and returns its index.\r\n     *\r\n     * @method Phaser.Structs.List#getIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child]\r\n     *\r\n     * @param {*} child - The item to locate.\r\n     *\r\n     * @return {integer} The index of the item within the List, or -1 if it's not in the List.\r\n     */\r\n    getIndex: function (child)\r\n    {\r\n        //  Return -1 if given child isn't a child of this display list\r\n        return this.list.indexOf(child);\r\n    },\r\n\r\n    /**\r\n     * Sort the contents of this List so the items are in order based\r\n     * on the given property. For example, `sort('alpha')` would sort the List\r\n     * contents based on the value of their `alpha` property.\r\n     *\r\n     * @method Phaser.Structs.List#sort\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [children,$return]\r\n     *\r\n     * @param {string} property - The property to lexically sort by.\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    sort: function (property)\r\n    {\r\n        if (property)\r\n        {\r\n            this._sortKey = property;\r\n\r\n            StableSort.inplace(this.list, this.sortHandler);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal handler for the {@link #sort} method which compares two items.\r\n     *\r\n     * @method Phaser.Structs.List#sortHandler\r\n     * @private\r\n     * @since 3.4.0\r\n     *\r\n     * @genericUse {T} - [childA,childB]\r\n     *\r\n     * @param {*} childA - The first item to compare.\r\n     * @param {*} childB - The second item to compare.\r\n     *\r\n     * @return {integer} The result of the comparison, which will be negative if the first item is smaller then second, positive if the first item is larger than the second, or 0 if they're equal.\r\n     */\r\n    sortHandler: function (childA, childB)\r\n    {\r\n        return childA[this._sortKey] - childB[this._sortKey];\r\n    },\r\n\r\n    /**\r\n     * Searches for the first instance of a child with its `name`\r\n     * property matching the given argument. Should more than one child have\r\n     * the same name only the first is returned.\r\n     *\r\n     * @method Phaser.Structs.List#getByName\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {string} name - The name to search for.\r\n     *\r\n     * @return {?*} The first child with a matching name, or null if none were found.\r\n     */\r\n    getByName: function (name)\r\n    {\r\n        return ArrayUtils.GetFirst(this.list, 'name', name);\r\n    },\r\n\r\n    /**\r\n     * Returns a random child from the group.\r\n     *\r\n     * @method Phaser.Structs.List#getRandom\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {integer} [startIndex=0] - Offset from the front of the group (lowest child).\r\n     * @param {integer} [length=(to top)] - Restriction on the number of values you want to randomly select from.\r\n     *\r\n     * @return {?*} A random child of this Group.\r\n     */\r\n    getRandom: function (startIndex, length)\r\n    {\r\n        return ArrayUtils.GetRandom(this.list, startIndex, length);\r\n    },\r\n\r\n    /**\r\n     * Returns the first element in a given part of the List which matches a specific criterion.\r\n     *\r\n     * @method Phaser.Structs.List#getFirst\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     * @genericUse {T | null} - [$return]\r\n     *\r\n     * @param {string} property - The name of the property to test or a falsey value to have no criterion.\r\n     * @param {*} value - The value to test the `property` against, or `undefined` to allow any value and only check for existence.\r\n     * @param {number} [startIndex=0] - The position in the List to start the search at.\r\n     * @param {number} [endIndex] - The position in the List to optionally stop the search at. It won't be checked.\r\n     *\r\n     * @return {?*} The first item which matches the given criterion, or `null` if no such item exists.\r\n     */\r\n    getFirst: function (property, value, startIndex, endIndex)\r\n    {\r\n        return ArrayUtils.GetFirstElement(this.list, property, value, startIndex, endIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns all children in this List.\r\n     *\r\n     * You can optionally specify a matching criteria using the `property` and `value` arguments.\r\n     *\r\n     * For example: `getAll('parent')` would return only children that have a property called `parent`.\r\n     *\r\n     * You can also specify a value to compare the property to:\r\n     * \r\n     * `getAll('visible', true)` would return only children that have their visible property set to `true`.\r\n     *\r\n     * Optionally you can specify a start and end index. For example if this List had 100 children,\r\n     * and you set `startIndex` to 0 and `endIndex` to 50, it would return matches from only\r\n     * the first 50 children in the List.\r\n     *\r\n     * @method Phaser.Structs.List#getAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @param {string} [property] - An optional property to test against the value argument.\r\n     * @param {*} [value] - If property is set then Child.property must strictly equal this value to be included in the results.\r\n     * @param {integer} [startIndex] - The first child index to start the search from.\r\n     * @param {integer} [endIndex] - The last child index to search up until.\r\n     *\r\n     * @return {Array.<*>} All items of the List which match the given criterion, if any.\r\n     */\r\n    getAll: function (property, value, startIndex, endIndex)\r\n    {\r\n        return ArrayUtils.GetAll(this.list, property, value, startIndex, endIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns the total number of items in the List which have a property matching the given value.\r\n     *\r\n     * @method Phaser.Structs.List#count\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     *\r\n     * @param {string} property - The property to test on each item.\r\n     * @param {*} value - The value to test the property against.\r\n     *\r\n     * @return {integer} The total number of matching elements.\r\n     */\r\n    count: function (property, value)\r\n    {\r\n        return ArrayUtils.CountAllMatching(this.list, property, value);\r\n    },\r\n\r\n    /**\r\n     * Swaps the positions of two items in the list.\r\n     *\r\n     * @method Phaser.Structs.List#swap\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child1,child2]\r\n     *\r\n     * @param {*} child1 - The first item to swap.\r\n     * @param {*} child2 - The second item to swap.\r\n     */\r\n    swap: function (child1, child2)\r\n    {\r\n        ArrayUtils.Swap(this.list, child1, child2);\r\n    },\r\n\r\n    /**\r\n     * Moves an item in the List to a new position.\r\n     *\r\n     * @method Phaser.Structs.List#moveTo\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move.\r\n     * @param {integer} index - Moves an item in the List to a new position.\r\n     *\r\n     * @return {*} The item that was moved.\r\n     */\r\n    moveTo: function (child, index)\r\n    {\r\n        return ArrayUtils.MoveTo(this.list, child, index);\r\n    },\r\n\r\n    /**\r\n     * Removes one or many items from the List.\r\n     *\r\n     * @method Phaser.Structs.List#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item, or array of items, to remove.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {*} The item, or array of items, which were successfully removed from the List.\r\n     */\r\n    remove: function (child, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.Remove(this.list, child);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.Remove(this.list, child, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the item at the given position in the List.\r\n     *\r\n     * @method Phaser.Structs.List#removeAt\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [$return]\r\n     *\r\n     * @param {integer} index - The position to remove the item from.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {*} The item that was removed.\r\n     */\r\n    removeAt: function (index, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.RemoveAt(this.list, index);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.RemoveAt(this.list, index, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the items within the given range in the List.\r\n     *\r\n     * @method Phaser.Structs.List#removeBetween\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T[]} - [$return]\r\n     *\r\n     * @param {integer} [startIndex=0] - The index to start removing from.\r\n     * @param {integer} [endIndex] - The position to stop removing at. The item at this position won't be removed.\r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {Array.<*>} An array of the items which were removed.[description]\r\n     */\r\n    removeBetween: function (startIndex, endIndex, skipCallback)\r\n    {\r\n        if (skipCallback)\r\n        {\r\n            return ArrayUtils.RemoveBetween(this.list, startIndex, endIndex);\r\n        }\r\n        else\r\n        {\r\n            return ArrayUtils.RemoveBetween(this.list, startIndex, endIndex, this.removeCallback, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes all the items.\r\n     *\r\n     * @method Phaser.Structs.List#removeAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     * \r\n     * @param {boolean} [skipCallback=false] - Skip calling the List.removeCallback.\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    removeAll: function (skipCallback)\r\n    {\r\n        var i = this.list.length;\r\n\r\n        while (i--)\r\n        {\r\n            this.remove(this.list[i], skipCallback);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Brings the given child to the top of this List.\r\n     *\r\n     * @method Phaser.Structs.List#bringToTop\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to bring to the top of the List.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    bringToTop: function (child)\r\n    {\r\n        return ArrayUtils.BringToTop(this.list, child);\r\n    },\r\n\r\n    /**\r\n     * Sends the given child to the bottom of this List.\r\n     *\r\n     * @method Phaser.Structs.List#sendToBack\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to send to the back of the list.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    sendToBack: function (child)\r\n    {\r\n        return ArrayUtils.SendToBack(this.list, child);\r\n    },\r\n\r\n    /**\r\n     * Moves the given child up one place in this group unless it's already at the top.\r\n     *\r\n     * @method Phaser.Structs.List#moveUp\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move up.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    moveUp: function (child)\r\n    {\r\n        ArrayUtils.MoveUp(this.list, child);\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * Moves the given child down one place in this group unless it's already at the bottom.\r\n     *\r\n     * @method Phaser.Structs.List#moveDown\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child,$return]\r\n     *\r\n     * @param {*} child - The item to move down.\r\n     *\r\n     * @return {*} The item which was moved.\r\n     */\r\n    moveDown: function (child)\r\n    {\r\n        ArrayUtils.MoveDown(this.list, child);\r\n\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * Reverses the order of all children in this List.\r\n     *\r\n     * @method Phaser.Structs.List#reverse\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    reverse: function ()\r\n    {\r\n        this.list.reverse();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Shuffles the items in the list.\r\n     *\r\n     * @method Phaser.Structs.List#shuffle\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {Phaser.Structs.List.<T>} - [$return]\r\n     *\r\n     * @return {Phaser.Structs.List} This List object.\r\n     */\r\n    shuffle: function ()\r\n    {\r\n        ArrayUtils.Shuffle(this.list);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Replaces a child of this List with the given newChild. The newChild cannot be a member of this List.\r\n     *\r\n     * @method Phaser.Structs.List#replace\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [oldChild,newChild,$return]\r\n     *\r\n     * @param {*} oldChild - The child in this List that will be replaced.\r\n     * @param {*} newChild - The child to be inserted into this List.\r\n     *\r\n     * @return {*} Returns the oldChild that was replaced within this group.\r\n     */\r\n    replace: function (oldChild, newChild)\r\n    {\r\n        return ArrayUtils.Replace(this.list, oldChild, newChild);\r\n    },\r\n\r\n    /**\r\n     * Checks if an item exists within the List.\r\n     *\r\n     * @method Phaser.Structs.List#exists\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [child]\r\n     *\r\n     * @param {*} child - The item to check for the existence of.\r\n     *\r\n     * @return {boolean} `true` if the item is found in the list, otherwise `false`.\r\n     */\r\n    exists: function (child)\r\n    {\r\n        return (this.list.indexOf(child) > -1);\r\n    },\r\n\r\n    /**\r\n     * Sets the property `key` to the given value on all members of this List.\r\n     *\r\n     * @method Phaser.Structs.List#setAll\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {T} - [value]\r\n     *\r\n     * @param {string} property - The name of the property to set.\r\n     * @param {*} value - The value to set the property to.\r\n     * @param {integer} [startIndex] - The first child index to start the search from.\r\n     * @param {integer} [endIndex] - The last child index to search up until.\r\n     */\r\n    setAll: function (property, value, startIndex, endIndex)\r\n    {\r\n        ArrayUtils.SetAll(this.list, property, value, startIndex, endIndex);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Passes all children to the given callback.\r\n     *\r\n     * @method Phaser.Structs.List#each\r\n     * @since 3.0.0\r\n     *\r\n     * @genericUse {EachListCallback.<T>} - [callback]\r\n     *\r\n     * @param {EachListCallback} callback - The function to call.\r\n     * @param {*} [context] - Value to use as `this` when executing callback.\r\n     * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n     */\r\n    each: function (callback, context)\r\n    {\r\n        var args = [ null ];\r\n\r\n        for (var i = 2; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (i = 0; i < this.list.length; i++)\r\n        {\r\n            args[0] = this.list[i];\r\n\r\n            callback.apply(context, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Clears the List and recreates its internal array.\r\n     *\r\n     * @method Phaser.Structs.List#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        this.removeAll();\r\n\r\n        this.list = [];\r\n    },\r\n\r\n    /**\r\n     * Destroys this List.\r\n     *\r\n     * @method Phaser.Structs.List#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.removeAll();\r\n\r\n        this.parent = null;\r\n        this.addCallback = null;\r\n        this.removeCallback = null;\r\n    },\r\n\r\n    /**\r\n     * The number of items inside the List.\r\n     *\r\n     * @name Phaser.Structs.List#length\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    length: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.list.length;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The first item in the List or `null` for an empty List.\r\n     *\r\n     * @name Phaser.Structs.List#first\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    first: {\r\n\r\n        get: function ()\r\n        {\r\n            this.position = 0;\r\n\r\n            if (this.list.length > 0)\r\n            {\r\n                return this.list[0];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The last item in the List, or `null` for an empty List.\r\n     *\r\n     * @name Phaser.Structs.List#last\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    last: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.list.length > 0)\r\n            {\r\n                this.position = this.list.length - 1;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The next item in the List, or `null` if the entire List has been traversed.\r\n     * \r\n     * This property can be read successively after reading {@link #first} or manually setting the {@link #position} to iterate the List.\r\n     *\r\n     * @name Phaser.Structs.List#next\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    next: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.position < this.list.length)\r\n            {\r\n                this.position++;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The previous item in the List, or `null` if the entire List has been traversed.\r\n     * \r\n     * This property can be read successively after reading {@link #last} or manually setting the {@link #position} to iterate the List backwards.\r\n     *\r\n     * @name Phaser.Structs.List#previous\r\n     * @type {integer}\r\n     * @readonly\r\n     * @since 3.0.0\r\n     */\r\n    previous: {\r\n\r\n        get: function ()\r\n        {\r\n            if (this.position > 0)\r\n            {\r\n                this.position--;\r\n\r\n                return this.list[this.position];\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = List;\r\n"},"lineCount":820}},"hash":"82cc12cb1054e5edf6acbd2f3b9ede7c","cacheData":{"env":{}}}