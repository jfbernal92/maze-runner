{"id":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543958592418},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\.babelrc","includedInParent":true,"mtime":1543958107109},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a reference to the Canvas Renderer, a Canvas Rendering Context, a Game Object, a Camera and a parent matrix\r\n * and then performs the following steps:\r\n * \r\n * 1) Checks the alpha of the source combined with the Camera alpha. If 0 or less it aborts.\r\n * 2) Takes the Camera and Game Object matrix and multiplies them, combined with the parent matrix if given.\r\n * 3) Sets the blend mode of the context to be that used by the Game Object.\r\n * 4) Sets the alpha value of the context to be that used by the Game Object combined with the Camera.\r\n * 5) Saves the context state.\r\n * 6) Sets the final matrix values into the context via setTransform.\r\n * \r\n * This function is only meant to be used internally. Most of the Canvas Renderer classes use it.\r\n *\r\n * @function Phaser.Renderer.Canvas.SetTransform\r\n * @since 3.12.0\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {CanvasRenderingContext2D} ctx - The canvas context to set the transform on.\r\n * @param {Phaser.GameObjects.GameObject} src - The Game Object being rendered. Can be any type that extends the base class.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} [parentMatrix] - A parent transform matrix to apply to the Game Object before rendering.\r\n * \r\n * @return {boolean} `true` if the Game Object context was set, otherwise `false`.\r\n */\r\nvar SetTransform = function (renderer, ctx, src, camera, parentMatrix)\r\n{\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (alpha <= 0)\r\n    {\r\n        //  Nothing to see, so don't waste time calculating stuff\r\n        return false;\r\n    }\r\n\r\n    var camMatrix = renderer._tempMatrix1.copyFromArray(camera.matrix.matrix);\r\n    var gameObjectMatrix = renderer._tempMatrix2.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n    var calcMatrix = renderer._tempMatrix3;\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        gameObjectMatrix.e = src.x;\r\n        gameObjectMatrix.f = src.y;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(gameObjectMatrix, calcMatrix);\r\n    }\r\n    else\r\n    {\r\n        gameObjectMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        gameObjectMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(gameObjectMatrix, calcMatrix);\r\n    }\r\n\r\n    //  Blend Mode\r\n    ctx.globalCompositeOperation = renderer.blendModes[src.blendMode];\r\n\r\n    //  Alpha\r\n    ctx.globalAlpha = alpha;\r\n\r\n    ctx.save();\r\n\r\n    calcMatrix.setToContext(ctx);\r\n\r\n    return true;\r\n};\r\n\r\nmodule.exports = SetTransform;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}}],"sources":{"../node_modules/phaser/src/renderer/canvas/utils/SetTransform.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Takes a reference to the Canvas Renderer, a Canvas Rendering Context, a Game Object, a Camera and a parent matrix\r\n * and then performs the following steps:\r\n * \r\n * 1) Checks the alpha of the source combined with the Camera alpha. If 0 or less it aborts.\r\n * 2) Takes the Camera and Game Object matrix and multiplies them, combined with the parent matrix if given.\r\n * 3) Sets the blend mode of the context to be that used by the Game Object.\r\n * 4) Sets the alpha value of the context to be that used by the Game Object combined with the Camera.\r\n * 5) Saves the context state.\r\n * 6) Sets the final matrix values into the context via setTransform.\r\n * \r\n * This function is only meant to be used internally. Most of the Canvas Renderer classes use it.\r\n *\r\n * @function Phaser.Renderer.Canvas.SetTransform\r\n * @since 3.12.0\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {CanvasRenderingContext2D} ctx - The canvas context to set the transform on.\r\n * @param {Phaser.GameObjects.GameObject} src - The Game Object being rendered. Can be any type that extends the base class.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} [parentMatrix] - A parent transform matrix to apply to the Game Object before rendering.\r\n * \r\n * @return {boolean} `true` if the Game Object context was set, otherwise `false`.\r\n */\r\nvar SetTransform = function (renderer, ctx, src, camera, parentMatrix)\r\n{\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (alpha <= 0)\r\n    {\r\n        //  Nothing to see, so don't waste time calculating stuff\r\n        return false;\r\n    }\r\n\r\n    var camMatrix = renderer._tempMatrix1.copyFromArray(camera.matrix.matrix);\r\n    var gameObjectMatrix = renderer._tempMatrix2.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\r\n    var calcMatrix = renderer._tempMatrix3;\r\n\r\n    if (parentMatrix)\r\n    {\r\n        //  Multiply the camera by the parent matrix\r\n        camMatrix.multiplyWithOffset(parentMatrix, -camera.scrollX * src.scrollFactorX, -camera.scrollY * src.scrollFactorY);\r\n\r\n        //  Undo the camera scroll\r\n        gameObjectMatrix.e = src.x;\r\n        gameObjectMatrix.f = src.y;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(gameObjectMatrix, calcMatrix);\r\n    }\r\n    else\r\n    {\r\n        gameObjectMatrix.e -= camera.scrollX * src.scrollFactorX;\r\n        gameObjectMatrix.f -= camera.scrollY * src.scrollFactorY;\r\n\r\n        //  Multiply by the Sprite matrix, store result in calcMatrix\r\n        camMatrix.multiply(gameObjectMatrix, calcMatrix);\r\n    }\r\n\r\n    //  Blend Mode\r\n    ctx.globalCompositeOperation = renderer.blendModes[src.blendMode];\r\n\r\n    //  Alpha\r\n    ctx.globalAlpha = alpha;\r\n\r\n    ctx.save();\r\n\r\n    calcMatrix.setToContext(ctx);\r\n\r\n    return true;\r\n};\r\n\r\nmodule.exports = SetTransform;\r\n"},"lineCount":80}},"hash":"f42bca503c0e097a9dec4136196d68ab","cacheData":{"env":{}}}