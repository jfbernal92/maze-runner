{"id":"../node_modules/phaser/src/utils/array/CountAllMatching.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543958592418},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\.babelrc","includedInParent":true,"mtime":1543958107109},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973},{"name":"./SafeRange","loc":{"line":7,"column":24},"parent":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\array\\CountAllMatching.js","resolved":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\src\\utils\\array\\SafeRange.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SafeRange = require('./SafeRange');\r\n\r\n/**\r\n * Returns the total number of elements in the array which have a property matching the given value.\r\n *\r\n * @function Phaser.Utils.Array.CountAllMatching\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test on each array element.\r\n * @param {*} value - The value to test the property against. Must pass a strict (`===`) comparison check.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {integer} The total number of elements with properties matching the given value.\r\n */\r\nvar CountAllMatching = function (array, property, value, startIndex, endIndex)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (endIndex === undefined) { endIndex = array.length; }\r\n\r\n    var total = 0;\r\n\r\n    if (SafeRange(array, startIndex, endIndex))\r\n    {\r\n        for (var i = startIndex; i < endIndex; i++)\r\n        {\r\n            var child = array[i];\r\n\r\n            if (child[property] === value)\r\n            {\r\n                total++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return total;\r\n};\r\n\r\nmodule.exports = CountAllMatching;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/utils/array/CountAllMatching.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/phaser/src/utils/array/CountAllMatching.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SafeRange = require('./SafeRange');\r\n\r\n/**\r\n * Returns the total number of elements in the array which have a property matching the given value.\r\n *\r\n * @function Phaser.Utils.Array.CountAllMatching\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test on each array element.\r\n * @param {*} value - The value to test the property against. Must pass a strict (`===`) comparison check.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {integer} The total number of elements with properties matching the given value.\r\n */\r\nvar CountAllMatching = function (array, property, value, startIndex, endIndex)\r\n{\r\n    if (startIndex === undefined) { startIndex = 0; }\r\n    if (endIndex === undefined) { endIndex = array.length; }\r\n\r\n    var total = 0;\r\n\r\n    if (SafeRange(array, startIndex, endIndex))\r\n    {\r\n        for (var i = startIndex; i < endIndex; i++)\r\n        {\r\n            var child = array[i];\r\n\r\n            if (child[property] === value)\r\n            {\r\n                total++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return total;\r\n};\r\n\r\nmodule.exports = CountAllMatching;\r\n"},"lineCount":47}},"hash":"2602bcd803cc27f5686be2410a07b942","cacheData":{"env":{}}}