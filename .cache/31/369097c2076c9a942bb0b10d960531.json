{"id":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","dependencies":[{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\package.json","includedInParent":true,"mtime":1543957193313},{"name":"C:\\Users\\PC\\Desktop\\maze-runner\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1543948009973}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @name Phaser.GameObjects.Components.TextureCrop\r\n * @since 3.0.0\r\n */\r\n\r\nvar TextureCrop = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * A boolean flag indicating if this Game Object is being cropped or not.\r\n     * You can toggle this at any time after `setCrop` has been called, to turn cropping on or off.\r\n     * Equally, calling `setCrop` with no arguments will reset the crop and disable it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#isCropped\r\n     * @type {boolean}\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Applies a crop to a texture based Game Object, such as a Sprite or Image.\r\n     * \r\n     * The crop is a rectangle that limits the area of the texture frame that is visible during rendering.\r\n     * \r\n     * Cropping a Game Object does not change its size, dimensions, physics body or hit area, it just\r\n     * changes what is shown when rendered.\r\n     * \r\n     * The crop coordinates are relative to the texture frame, not the Game Object, meaning 0 x 0 is the top-left.\r\n     * \r\n     * Therefore, if you had a Game Object that had an 800x600 sized texture, and you wanted to show only the left\r\n     * half of it, you could call `setCrop(0, 0, 400, 600)`.\r\n     * \r\n     * It is also scaled to match the Game Object scale automatically. Therefore a crop rect of 100x50 would crop\r\n     * an area of 200x100 when applied to a Game Object that had a scale factor of 2.\r\n     * \r\n     * You can either pass in numeric values directly, or you can provide a single Rectangle object as the first argument.\r\n     * \r\n     * Call this method with no arguments at all to reset the crop, or toggle the property `isCropped` to `false`.\r\n     * \r\n     * You should do this if the crop rectangle becomes the same size as the frame itself, as it will allow\r\n     * the renderer to skip several internal calculations.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setCrop\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(number|Phaser.Geom.Rectangle)} [x] - The x coordinate to start the crop from. Or a Phaser.Geom.Rectangle object, in which case the rest of the arguments are ignored.\r\n     * @param {number} [y] - The y coordinate to start the crop from.\r\n     * @param {number} [width] - The width of the crop rectangle in pixels.\r\n     * @param {number} [height] - The height of the crop rectangle in pixels.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setCrop: function (x, y, width, height)\r\n    {\r\n        if (x === undefined)\r\n        {\r\n            this.isCropped = false;\r\n        }\r\n        else if (this.frame)\r\n        {\r\n            if (typeof x === 'number')\r\n            {\r\n                this.frame.setCropUVs(this._crop, x, y, width, height, this.flipX, this.flipY);\r\n            }\r\n            else\r\n            {\r\n                var rect = x;\r\n\r\n                this.frame.setCropUVs(this._crop, rect.x, rect.y, rect.width, rect.height, this.flipX, this.flipY);\r\n            }\r\n\r\n            this.isCropped = true;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The key of the texture to be used, as stored in the Texture Manager.\r\n     * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        if (this.isCropped)\r\n        {\r\n            this.frame.updateCropUVs(this._crop, this.flipX, this.flipY);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal method that returns a blank, well-formed crop object for use by a Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#resetCropObject\r\n     * @private\r\n     * @since 3.12.0\r\n     * \r\n     * @return {object} The crop object.\r\n     */\r\n    resetCropObject: function ()\r\n    {\r\n        return { u0: 0, v0: 0, u1: 0, v1: 0, width: 0, height: 0, x: 0, y: 0, flipX: false, flipY: false, cx: 0, cy: 0, cw: 0, ch: 0 };\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = TextureCrop;\r\n","map":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/TextureCrop.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}}],"sources":{"../node_modules/phaser/src/gameobjects/components/TextureCrop.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @name Phaser.GameObjects.Components.TextureCrop\r\n * @since 3.0.0\r\n */\r\n\r\nvar TextureCrop = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * A boolean flag indicating if this Game Object is being cropped or not.\r\n     * You can toggle this at any time after `setCrop` has been called, to turn cropping on or off.\r\n     * Equally, calling `setCrop` with no arguments will reset the crop and disable it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#isCropped\r\n     * @type {boolean}\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Applies a crop to a texture based Game Object, such as a Sprite or Image.\r\n     * \r\n     * The crop is a rectangle that limits the area of the texture frame that is visible during rendering.\r\n     * \r\n     * Cropping a Game Object does not change its size, dimensions, physics body or hit area, it just\r\n     * changes what is shown when rendered.\r\n     * \r\n     * The crop coordinates are relative to the texture frame, not the Game Object, meaning 0 x 0 is the top-left.\r\n     * \r\n     * Therefore, if you had a Game Object that had an 800x600 sized texture, and you wanted to show only the left\r\n     * half of it, you could call `setCrop(0, 0, 400, 600)`.\r\n     * \r\n     * It is also scaled to match the Game Object scale automatically. Therefore a crop rect of 100x50 would crop\r\n     * an area of 200x100 when applied to a Game Object that had a scale factor of 2.\r\n     * \r\n     * You can either pass in numeric values directly, or you can provide a single Rectangle object as the first argument.\r\n     * \r\n     * Call this method with no arguments at all to reset the crop, or toggle the property `isCropped` to `false`.\r\n     * \r\n     * You should do this if the crop rectangle becomes the same size as the frame itself, as it will allow\r\n     * the renderer to skip several internal calculations.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setCrop\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(number|Phaser.Geom.Rectangle)} [x] - The x coordinate to start the crop from. Or a Phaser.Geom.Rectangle object, in which case the rest of the arguments are ignored.\r\n     * @param {number} [y] - The y coordinate to start the crop from.\r\n     * @param {number} [width] - The width of the crop rectangle in pixels.\r\n     * @param {number} [height] - The height of the crop rectangle in pixels.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setCrop: function (x, y, width, height)\r\n    {\r\n        if (x === undefined)\r\n        {\r\n            this.isCropped = false;\r\n        }\r\n        else if (this.frame)\r\n        {\r\n            if (typeof x === 'number')\r\n            {\r\n                this.frame.setCropUVs(this._crop, x, y, width, height, this.flipX, this.flipY);\r\n            }\r\n            else\r\n            {\r\n                var rect = x;\r\n\r\n                this.frame.setCropUVs(this._crop, rect.x, rect.y, rect.width, rect.height, this.flipX, this.flipY);\r\n            }\r\n\r\n            this.isCropped = true;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The key of the texture to be used, as stored in the Texture Manager.\r\n     * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        if (this.isCropped)\r\n        {\r\n            this.frame.updateCropUVs(this._crop, this.flipX, this.flipY);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal method that returns a blank, well-formed crop object for use by a Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#resetCropObject\r\n     * @private\r\n     * @since 3.12.0\r\n     * \r\n     * @return {object} The crop object.\r\n     */\r\n    resetCropObject: function ()\r\n    {\r\n        return { u0: 0, v0: 0, u1: 0, v1: 0, width: 0, height: 0, x: 0, y: 0, flipX: false, flipY: false, cx: 0, cy: 0, cw: 0, ch: 0 };\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = TextureCrop;\r\n"},"lineCount":203}},"hash":"39f7aa03a66af92360392bd19fc7ac62","cacheData":{"env":{}}}