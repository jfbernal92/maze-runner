{"version":3,"sources":["../server/app.js"],"names":["app","server","http","Server","bodyParser","require","bundler","Bundler","path","resolve","__dirname","mongoose","conString","Promise","Crono","model","user","String","h","Number","m","s","connect","err","console","log","set","use","json","urlencoded","extended","req","res","next","header","listen","get","address","port","find","sort","limit","exec","cronos","send","post","body","crono","save","status","error","middleware"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAQA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,SAASC,eAAKC,MAAL,CAAYH,GAAZ,CAAf;AACA,IAAMI,aAAaC,QAAQ,aAAR,CAAnB;AACA,IAAMC,UAAU,IAAIC,uBAAJ,CAAYC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,sBAAxB,CAAZ,CAAhB;;AAOA;AACA,IAAIC,WAAWN,QAAQ,UAAR,CAAf;AACA,IAAIO,YAAY,0DAAhB;AACAD,SAASE,OAAT,GAAmBA,OAAnB;AACA,IAAIC,QAAQH,SAASI,KAAT,CAAe,OAAf,EAAwB;AAChCC,UAAKC,MAD2B;AAEhCC,OAAGC,MAF6B;AAGhCC,OAAGD,MAH6B;AAIhCE,OAAGF;AAJ6B,CAAxB,CAAZ;AAMAR,SAASW,OAAT,CAAiBV,SAAjB,EAA4B,UAACW,GAAD,EAAS;AACjC,QAAGA,GAAH,EAAO;AACHC,gBAAQC,GAAR,CAAY,+BAA+BF,GAA3C;AACH,KAFD,MAEK;AACDC,gBAAQC,GAAR,CAAY,yBAAZ;AACH;AAEJ,CAPD;;AAcA;AACAzB,IAAI0B,GAAJ,CAAQ,MAAR,EAAgB,IAAhB;AACA1B,IAAI2B,GAAJ,CAAQvB,WAAWwB,IAAX,EAAR;AACA5B,IAAI2B,GAAJ,CAAQvB,WAAWyB,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA9B,IAAI2B,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJH;;AAMAhC,OAAOkC,MAAP,CACInC,IAAIoC,GAAJ,CAAQ,MAAR,CADJ,EACqB,YAAW;AAC5BZ,YAAQC,GAAR,oCAA6CxB,OAAOoC,OAAP,GAAiBC,IAA9D;AACH,CAHD;;AAMAtC,IAAI2B,GAAJ,CAAQ,WAAR,EAAqB,UAACI,GAAD,EAAMC,GAAN,EAAa;AAC9BlB,UAAMyB,IAAN,CAAW,EAAX,EAAeC,IAAf,CAAoB,EAACtB,GAAE,CAAH,EAAKE,GAAE,CAAP,EAASC,GAAE,CAAX,EAApB,EAAmCoB,KAAnC,CAAyC,CAAzC,EAA4CC,IAA5C,CAAiD,UAASnB,GAAT,EAAcoB,MAAd,EAAsB;AAAEX,YAAIY,IAAJ,CAASD,MAAT;AAAmB,KAA5F;AAEH,CAHD;;AAKA3C,IAAI6C,IAAJ,CAAS,OAAT,EAAkB,UAAUd,GAAV,EAAeC,GAAf,EAAmB;AACjCR,YAAQC,GAAR,CAAYM,IAAIe,IAAhB;AACA,QAAI;AACA,YAAIC,QAAQ,IAAIjC,KAAJ,CAAUiB,IAAIe,IAAd,CAAZ;AACAC,cAAMC,IAAN;AACAhB,YAAIiB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,OAArB;AACH,KAJD,CAIE,OAAOM,KAAP,EAAc;AACZlB,YAAIiB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,OAArB;AACApB,gBAAQC,GAAR,CAAYyB,KAAZ;AACH;AACJ,CAVD;;AAYAlD,IAAI2B,GAAJ,CAAQrB,QAAQ6C,UAAR,EAAR","file":"app.js","sourcesContent":["/*jshint esversion:6*/\nimport express from 'express';\nimport Bundler from 'parcel-bundler';\nimport path from 'path';\nimport http from 'http';\n\n\n\nconst app = express();\nconst server = http.Server(app);\nconst bodyParser = require(\"body-parser\");\nconst bundler = new Bundler(path.resolve(__dirname, '../client/index.html'));\n\n\n\n\n\n\n//BBDD\nvar mongoose = require(\"mongoose\")\nvar conString = \"mongodb://admin:rootadmin1@ds259111.mlab.com:59111/crono\";\nmongoose.Promise = Promise;\nvar Crono = mongoose.model(\"Crono\", {\n    user:String,\n    h: Number,\n    m: Number,\n    s: Number\n});\nmongoose.connect(conString, (err) => {\n    if(err){\n        console.log(\"Database connection error:\" + err);\n    }else{\n        console.log(\"Database connection OK.\");\n    }\n    \n});\n\n\n\n\n\n\n// SERVER SETTINGS\napp.set(\"port\", 8080);\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    next();\n  });\n\nserver.listen( \n    app.get(\"port\"), function() {\n    console.log(`Listening on http://localhost:${server.address().port}`);\n});\n\n\napp.use('/getTimes', (req, res) =>{\n    Crono.find({}).sort({h:1,m:1,s:1}).limit(7).exec(function(err, cronos) { res.send(cronos); });\n    \n});\n\napp.post(\"/time\", function (req, res){\n    console.log(req.body);\n    try {\n        var crono = new Crono(req.body)\n        crono.save()\n        res.status(200).send('saved');\n    } catch (error) {\n        res.status(500).send('error');\n        console.log(error);\n    }\n})\n\napp.use(bundler.middleware());"]}